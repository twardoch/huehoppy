[build-system]
requires = ["setuptools>=61.0", "wheel", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "huehoppy"
dynamic = ["version"]
description = "Advanced Color Transfer Tool - A unified and extensible color transfer library"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Terragon Labs", email = "contact@terragonlabs.com"},
]
maintainers = [
    {name = "Terragon Labs", email = "contact@terragonlabs.com"},
]
keywords = ["color-transfer", "image-processing", "computer-vision", "style-transfer"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.21.0",
    "opencv-python>=4.5.0",
    "pillow>=8.0.0",
    "click>=8.0.0",
    "rich>=12.0.0",
    "loguru>=0.6.0",
    "pydantic>=2.0.0",
    "pathlib2>=2.3.0; python_version<'3.4'",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "black>=22.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
    "tox>=4.0.0",
    "build>=0.10.0",
    "twine>=4.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "pytest-benchmark>=4.0.0",
    "pytest-mock>=3.10.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=0.18.0",
    "sphinx-click>=4.3.0",
    "sphinx-autoapi>=2.1.0",
]
neural = [
    "torch>=1.12.0",
    "torchvision>=0.13.0",
    "tensorflow>=2.9.0",
    "scikit-learn>=1.1.0",
]
all = [
    "huehoppy[dev,test,docs,neural]",
]

[project.urls]
Homepage = "https://github.com/terragonlabs/huehoppy"
Repository = "https://github.com/terragonlabs/huehoppy"
Documentation = "https://huehoppy.readthedocs.io"
"Bug Tracker" = "https://github.com/terragonlabs/huehoppy/issues"
Changelog = "https://github.com/terragonlabs/huehoppy/blob/main/CHANGELOG.md"

[project.scripts]
huehoppy = "huehoppy.cli:main"

[tool.setuptools]
packages = ["huehoppy"]

[tool.setuptools.dynamic]
version = {attr = "huehoppy.__version__"}

[tool.setuptools_scm]
write_to = "huehoppy/_version.py"
version_scheme = "python-simplified-semver"
local_scheme = "dirty-tag"

# Test configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=huehoppy",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-branch",
    "--cov-fail-under=85",
    "-ra",
    "--tb=short",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "benchmark: marks tests as benchmarks",
]

# Coverage configuration
[tool.coverage.run]
source = ["huehoppy"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/.*",
    "*/venv/*",
    "*/build/*",
    "*/dist/*",
    "huehoppy/_version.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if typing.TYPE_CHECKING:",
]

# Ruff configuration
[tool.ruff]
target-version = "py38"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings  
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "RUF", # ruff-specific rules
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.ruff.isort]
known-first-party = ["huehoppy"]

# Black configuration
[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | submodules
)/
'''

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
show_error_context = true
pretty = true

[[tool.mypy.overrides]]
module = [
    "cv2.*",
    "fire.*",
    "loguru.*",
    "rich.*",
]
ignore_missing_imports = true

# Tox configuration
[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py38,py39,py310,py311,py312,lint,type,docs
isolated_build = true

[testenv]
deps = 
    pytest
    pytest-cov
    pytest-xdist
commands = 
    pytest {posargs}

[testenv:lint]
deps = 
    ruff
    black
commands = 
    ruff check .
    black --check .

[testenv:type]
deps = 
    mypy
    types-setuptools
commands = 
    mypy huehoppy

[testenv:docs]
deps = 
    sphinx
    sphinx-rtd-theme
    myst-parser
commands = 
    sphinx-build -b html docs docs/_build/html
"""